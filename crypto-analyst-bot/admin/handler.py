"""admin/handler.py
–ó–∞–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ –∏ –∑–∞–ø—Ä–æ—Å–æ–≤.
"""

import logging
from telegram import Update, constants
from telegram.ext import CallbackContext
from sqlalchemy.ext.asyncio import AsyncSession

from database import operations as db_ops
from settings.messages import get_text

logger = logging.getLogger(__name__)

async def handle_admin_request(update: Update, context: CallbackContext, payload: str, db_session: AsyncSession):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ü–æ–∫–∞ –ª–∏—à—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è."""
    if not update.effective_message:
        return

    user_id = update.effective_user.id
    lang = context.user_data.get('lang', 'ru')

    command = (payload or '').strip().lower()
    if command == 'stats':
        total_users = await db_ops.count_users(db_session)
        response = f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}"
    else:
        response = "‚öôÔ∏è –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."

    await update.effective_message.reply_text(response, parse_mode=constants.ParseMode.MARKDOWN)
    await db_ops.add_chat_message(session=db_session, user_id=user_id, role='model', text=response)
